steps:
  - name: "gcr.io/cloud-builders/curl:latest"
    id: "fetch-firebase-binary"
    args:
      - "--silent"
      - "--location"
      - "--output"
      - "firebase"
      - "https://firebase.tools/bin/linux/latest"
  - name: "gcr.io/cloud-builders/curl:latest"
    id: "fetch-hugo-binary"
    args:
      - "--silent"
      - "--location"
      - "--output"
      - "hugo.tar.gz"
      - "https://github.com/gohugoio/hugo/releases/download/v${_HUGO_VERSION}/hugo_extended_${_HUGO_VERSION}_Linux-64bit.tar.gz"
    waitFor: ["-"]
  - name: "golang:1"
    env:
    - "PROJECT_ID=$PROJECT_ID"
    - "BUILD_ID=$BUILD_ID"
    - "_CHANNEL_ID=$_CHANNEL_ID"
    - "_EXPIRE_TIME=$_EXPIRE_TIME"
    script: |
      #!/usr/bin/env bash

      mkdir -p /tmp
      mv firebase /tmp
      chmod 755 /tmp/firebase
      echo "Firebase CLI version: $(/tmp/firebase --version | awk '{print $NF}')"

      mv hugo.tar.gz /tmp
      tar -C /tmp -xzf /tmp/hugo.tar.gz

      cd /workspace/public/
      files=$(ls)
      if [[ ! -z "$files" ]]; then
        rm -r *
      fi

      cd /workspace/hugo
      if [[ "$_CHANNEL_ID" == "production" ]]; then
        export HUGO_ENV="production"
        /tmp/hugo --cleanDestinationDir --gc --minify --environment production
        cd /workspace/
        /tmp/firebase --project ${PROJECT_ID} --non-interactive deploy --only hosting -m "Build ${BUILD_ID}"
      else
        /tmp/firebase --project ${PROJECT_ID} hosting:channel:delete $_CHANNEL_ID --force
        /tmp/firebase --project ${PROJECT_ID} hosting:channel:create $_CHANNEL_ID
        /tmp/hugo --cleanDestinationDir --gc --minify --environment development --baseURL $_CHANNEL_URL/ --buildFuture
        cd /workspace/
        /tmp/firebase --project ${PROJECT_ID} --non-interactive hosting:channel:deploy $_CHANNEL_ID --expires $_EXPIRE_TIME
      fi
substitutions:
  _HUGO_VERSION: 0.123.7
